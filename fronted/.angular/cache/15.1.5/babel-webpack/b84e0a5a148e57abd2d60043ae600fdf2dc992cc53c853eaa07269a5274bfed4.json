{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//import { Observable } from 'rxjs';\nexport class ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/Dell';\n  }\n  getProductos() {\n    return this.http.get(this.baseUrl);\n  }\n  createProducto(producto) {\n    return this.http.post(this.baseUrl, producto);\n  }\n  getProductoId(id) {\n    return this.http.get(this.baseUrl + \"/\" + id);\n  }\n  updateProducto(producto) {\n    return this.http.put(this.baseUrl, producto); //aqui varea dependiendo la construccion del metodo en el backend\n  }\n\n  deleteProducto(producto) {\n    return this.http.delete(this.baseUrl + \"/\" + producto.id);\n  }\n}\nServiceService.ɵfac = function ServiceService_Factory(t) {\n  return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceService,\n  factory: ServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAGA;AAQA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAExB,YAAO,GAAG,4BAA4B;EAFC;EAIvCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,OAAO,CAAC;EAChD;EAEAC,cAAc,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAW,IAAI,CAACH,OAAO,EAAEE,QAAQ,CAAC;EACzD;EAEAE,aAAa,CAACC,EAAU;IACpB,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,OAAO,GAAC,GAAG,GAACK,EAAE,CAAC;EACzD;EAEAC,cAAc,CAACJ,QAAkB;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAW,IAAI,CAACP,OAAO,EAAEE,QAAQ,CAAC,CAAC,CAAC;EAC1D;;EAEAM,cAAc,CAACN,QAAiB;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAW,IAAI,CAACT,OAAO,GAAC,GAAG,GAACE,QAAQ,CAACG,EAAE,CAAC;EACjE;;AAvBWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YALb;AAAM","names":["ServiceService","constructor","http","getProductos","get","baseUrl","createProducto","producto","post","getProductoId","id","updateProducto","put","deleteProducto","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/parker796/Documentos/Bedu/proyecto-final-Ecommerce/fronted/src/app/Service/service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport { Producto } from '../Modelo/Producto';\n//import { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\nexport class ServiceService {\n  constructor(private http:HttpClient) { }\n\n  baseUrl = 'http://localhost:8080/Dell';\n\n  getProductos(){\n    return this.http.get<Producto[]>(this.baseUrl);\n  }\n\n  createProducto(producto: Producto){\n    return this.http.post<Producto>(this.baseUrl, producto);\n  }\n\n  getProductoId(id: number){\n      return this.http.get<Producto[]>(this.baseUrl+\"/\"+id);\n  }\n\n  updateProducto(producto: Producto){\n    return this.http.put<Producto>(this.baseUrl, producto); //aqui varea dependiendo la construccion del metodo en el backend\n  }\n\n  deleteProducto(producto:Producto){\n    return this.http.delete<Producto>(this.baseUrl+\"/\"+producto.id);\n  }\n\n  /*\n  getProductos(): Observable<Producto[]> {\n    return this.http.get<Producto[]>(baseUrl);\n  }*/\n}\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}